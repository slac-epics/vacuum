# substitutions:
# device  - device name
# port    - serial port 
# channel - MKS 937B channel number (1-4)
# addr	  - MKS 937B Address (default 253)
record(calc, "$(device):PLOG") {
  field(DESC, "log Pressure")
  field(EGU, "log")
  field(CALC, "LOG(A)")
  field(INPA, "$(device):PMON NPP MS")
  field(HOPR, "-2")
  field(LOPR, "-11")
}

record(calcout, "$(device):PADEL") {
  field(DESC, "deadband")
  field(CALC, "A/B")
  field(OUT, "$(device):PMON.ADEL")
  field(INPA, "$(device):PMON.VAL")
  field(INPB, "20")
  field(SCAN, "10 second")
}


record(calc, "$(device):P") {
  field(DESC, "Pressure")
  field(EGU, "Torr")
  field(CALC, "(A)")
  field(INPA, "$(device):PMON CP MS")
  field(HOPR, "-2")
  field(LOPR, "-11")
  field(PREC, "3")
}



# #############################################################################
# Pirani and convection Pirani control commands
######################################## 


record(bo, "$(device):STATEDES") {
  field(DESC, "Gauge Enable")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setCP($(channel),$(addr)) $(port) 0")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(ASG, "VACWRITE")
  field(FLNK, "$(device):STATERBCK")
}

record(bi, "$(device):STATERBCK") {
  field(DESC, "Gauge Enable RBCK")
  field(SCAN, "Event")
  field(EVNT, "$(medEvt)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getCP($(channel),$(addr)) $(port) 0")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(PINI, "YES")
}

# #############################################################################
#  Setpoints and Relays  Configurations
###############################################################################

record(mbbo, "$(device):PSTATENADES_1") {
  field(DESC, "Setpt Enable DES Relay $(setpointA)")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setRlyEn($(setpointA),$(addr)) $(port) 0")
#  0: clear(Disbale); 1: set(FORCE); 2: enable;
 field(ZRST, "Disabled")
 field(ONST, "ForceSET")
 field(TWST, "Enabled")
 field(ZRSV, "MINOR")
 field(ONSV, "MINOR")
 field(TWSV, "NO_ALARM")
}

record(mbbo, "$(device):PSTATENADES_2") {
  field(DESC, "Setpt Enable DES Relay $(setpointB)")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setRlyEn($(setpointB),$(addr)) $(port) 0")
#  0: clear(Disable); 1: set(FORCE); 2: enable;
 field(ZRST, "Disabled")
 field(ONST, "ForceSET")
 field(TWST, "Enabled")
 field(ZRSV, "MINOR")
 field(ONSV, "MINOR")
 field(TWSV, "NO_ALARM")
}

record(ao, "$(device):PSTATSPDES_1") {
  field(DESC, "Setpt DES Relay $(setpointA)")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setsp($(setpointA),$(addr)) $(port) 0")
  field(EGU, "Torr")
  field(PREC, "2")
  field(HOPR, "9.5e+1")
  field(LOPR, "2.0e-3")
  field(DRVH, "95")
  field(DRVL, "2.0e-3")
  field(DOL, "2.0e-3")
  field(ASG, "VACWRITE")
  field(FLNK, "$(device):PSTATSPRBCK_1") 
}

record(ao, "$(device):PSTATSPDES_2") {
  field(DESC, "Setpt DES Relay $(setpointB)")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setsp($(setpointB),$(addr)) $(port) 0")
  field(EGU, "Torr")
  field(PREC, "2")
  field(HOPR, "9.5e+1")
  field(LOPR, "2.0e-3")
  field(DRVH, "95")
  field(DRVL, "2.0e-3")
  field(DOL, "2.0e-3")
  field(ASG, "VACWRITE")
  field(FLNK, "$(device):PSTATSPRBCK_1") 
}

record(mbbi, "$(device):PSTATENABLE_1") {
  field(DESC, "Setpt Enable RBCK Relay $(setpointA)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getRlyEn($(setpointA),$(addr)) $(port) 0")
  field(SCAN, "Event")
  field(EVNT, "$(medEvt)")
#  0: clear(Disbale); 1: set(FORCE); 2: enable;
  field(ZRST, "Disabled")
  field(ONST, "SET")
  field(TWST, "Enabled")
  field(ZRSV, "MINOR")
  field(ONSV, "MINOR")
  field(TWSV, "NO_ALARM")
  field(FLNK, "$(device):PSTATENABLE_2")
}

record(mbbi, "$(device):PSTATENABLE_2") {
  field(DESC, "Setpt Enable RBCK Relay $(setpointB)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getRlyEn($(setpointB),$(addr)) $(port) 0")
  field(ZRST, "Disabled")
  field(ONST, "SET")
  field(TWST, "Enabled")
  field(ZRSV, "MINOR")
  field(ONSV, "MINOR")
  field(TWSV, "NO_ALARM")
  field(FLNK, "$(device):PSTATSPRBCK_1")  
}

record(ai, "$(device):PSTATSPRBCK_1") {
  field(DESC, "Setpt RBCK Relay $(setpointA)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getsp($(setpointA),$(addr)) $(port) 0")
  field(FLNK, "$(device):HYSTSPRBCK_1")
  field(EGU, "Torr")
  field(PREC, "1")
  field(FLNK, "$(device):HYSTSPRBCK_1") 
}

record(ai, "$(device):HYSTSPRBCK_1") {
  field(DESC, "Setpt RBCK HYST $(setpointA)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getHysp($(setpointA),$(addr)) $(port) 0")
  field(FLNK, "$(device):PSTATSPRBCK_2")
  field(EGU, "Torr")
  field(PREC, "1")
}

record(ai, "$(device):PSTATSPRBCK_2") {
  field(DESC, "Setpt RBCK Relay $(setpointB)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getsp($(setpointB),$(addr)) $(port) 0")
  field(EGU, "Torr")
  field(PREC, "1")
  field(FLNK, "$(device):HYSTSPRBCK_2")
}

record(ai, "$(device):HYSTSPRBCK_2") {
  field(DESC, "Setpt RBCK HYST $(setpointB)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getHysp($(setpointB),$(addr)) $(port) 0")
  field(EGU, "Torr")
  field(PREC, "1")
}
#################################
#Relay Directions, Set and Read
#################################
record(bo, "$(device):PSTATDIRDES_1") {
  field(DESC, "Setpt Dir DES Relay $(setpointA)")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setSpDir($(setpointA),$(addr)) $(port) 0")
 field(ZNAM, "BELOW")
 field(ONAM, "ABOVE")
 field(FLNK, "$(device):PSTATSPDIR_1")
}

record(bi, "$(device):PSTATSPDIR_1") {
  field(DESC, "Setpt DIR RBCK Relay $(setpointA)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getSpDir($(setpointA),$(addr)) $(port) 0")
  field(SCAN, "Event")
  field(EVNT, "$(slowEvt)")
  field(ZNAM, "BELOW")
  field(ONAM, "ABOVE")
}

record(bo, "$(device):PSTATDIRDES_2") {
  field(DESC, "Setpt Dir DES Relay $(setpointB)")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setSpDir($(setpointB),$(addr)) $(port) 0")
 field(ZNAM, "BELOW")
 field(ONAM, "ABOVE")
 field(FLNK, "$(device):PSTATSPDIR_2") 
}

record(bi, "$(device):PSTATSPDIR_2") {
  field(DESC, "Setpt DIR RBCK Relay $(setpointB)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getSpDir($(setpointB),$(addr)) $(port) 0")
  field(SCAN, "Event")
  field(EVNT, "$(slowEvt)")
  field(ZNAM, "BELOW")
  field(ONAM, "ABOVE")
}


################################################################################
# PSTAT - #
########################################

record(bi, "$(device):PSTAT_1") {
  field(DESC, "PSTAT 1 (Relay $(setpointA))")
  field(SCAN, "Event")
  field(EVNT, "$(fastEvt)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db relaystat$(setpointA)($(setpointA),$(addr)) $(port) 0")
  field(ZNAM, "Faulted")
  field(ONAM, "OK")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
  field(FLNK, "$(device):PSTAT_2")
}

record(bi, "$(device):PSTAT_2") {
  field(DESC, "PSTAT 2 (Relay $(setpointB))")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db relaystat$(setpointB)($(setpointB),$(addr)) $(port) 0")
  field(ZNAM, "Faulted")
  field(ONAM, "OK")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}


#PR gauges only have 2 Pressure Releys
record(calc, "$(device):PSTAT_CALC") {
  field(CALC, "A&B")
  field(INPA, "$(device):PSTAT_1.VAL MS CP")
  field(INPB, "$(device):PSTAT_2.VAL MS CP")
  field(FLNK, "$(device):PSTAT_SUM")
}

record(bi, "$(device):PSTAT_SUM") {
  field(DESC, "PSTAT Summary")
  field(INP, "$(device):PSTAT_CALC")
  field(ZNAM, "Faulted")
  field(ONAM, "OK")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

################################################################################
# Status
########################################
#% controldesk Pressure smon
#
record(mbbi, "$(device):STATE") {
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db state($(channel),$(addr)) $(port) 0")
  field(DESC, "Status")
  field(SCAN, "Event")
  field(EVNT, "$(fastEvt)")
  field(FLNK, "$(device):STATUS_RSCALC")
  field(ZRST, "OK")
  field(ONST, "OK")
  field(TWST, "Below Range")
  field(THST, "Above Range")
  field(FRST, "At Atmosphere")
  field(FVST, "HV Off")
  field(SXST, "RP_OFF")
  field(SVST, "Wait")
  field(EIST, "LowEmis")
  field(NIST, "CNTRL_Off")
  field(TEST, "Protected State")
  field(ELST, "MISCONN")
  field(TVST, "Protected State")
  field(TTST, "NoGauge")
  field(FTST, "Not Connected")
  field(FFST, "Wrong Gauge")
# field(UNSV, "Bad Command")
  field(ZRSV, "NO_ALARM")
  field(ONSV, "NO_ALARM")
  field(TWSV, "NO_ALARM")
  field(THSV, "NO_ALARM")
  field(FRSV, "MINOR")
  field(FVSV, "MAJOR")
  field(SXSV, "MAJOR")
  field(SVSV, "MINOR")
  field(EISV, "MINOR")
  field(NISV, "MAJOR")
  field(TESV, "MAJOR")
  field(ELSV, "MAJOR")
  field(TVSV, "MINOR")
  field(TTSV, "MAJOR")
  field(FTSV, "MAJOR")
  field(FFSV, "MAJOR")
}


# 0 when raw STATE is ok, 1 on any error
record(calc, "$(device):STATUS_RSCALC") {
  field(FLNK, "$(device):PMON")
  field(CALC, "A<=1?0:1")
  field(INPA, "$(device):STATE.VAL")
}

# If raw state is ok, use PMONRAW
# If raw state is an error, use 1.0 Torr.
record(sel, "$(device):PMON") {
  field(DESC, "Pressure")
  field(SELM, "Specified")
  field(NVL, "$(device):STATUS_RSCALC")
  field(INPA, "$(device):PMONRAW PP MS")
  field(INPB, "1.00")
  field(FLNK, "$(device):PLOG MS")
  field(PREC, "3")
  field(EGU, "Torr")
  field(HIGH, "9.9e-3" )
  field(HSV,  "MINOR" )
  field(HIHI, "0.99" )
  field(HHSV, "MAJOR" )
}

record(ai, "$(device):PMONRAW") {
  field(SCAN, "Event")
  field(EVNT, "$(fastEvt)")
  field(DESC, "Pressure")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db pressure($(channel),$(addr),$(device):STATUS_RS) $(port) 0")
  field(EGU, "Torr")
  field(PREC, "11")
  field(HOPR, "0.01")
  field(LOPR, "0")
  field(FLNK, "$(device):STATUS_RSCALC")
}

# Protocol errors in PMONRAW write error string to STATUS_RS
# STATUS_RS_CALC2 write's "OK" to STATUS_RS when PMONRAW.SEVR is not MAJOR
record(stringin, "$(device):STATUS_RS") {
  field(DESC, "Channel Status")
  field(PINI, "YES")
  field(VAL, "Ok")
}

# Clean up Combo Pressure Status if there is no error
# Process STATUS_RS_CALC2 when PMONRAW.SEVR is not MAJOR
record(calcout, "$(device):STATUS_RS_CALC1") {
  field(INPA, "$(device):PMONRAW.SEVR CP")
  field(CALC, "A#2")
  field(OOPT, "When Non-zero")
  field(OUT, "$(device):STATUS_RS_CALC2.PROC")
}

# Write "OK" to STATUS_RS when PMONRAW.SEVR is not MAJOR
record(stringout, "$(device):STATUS_RS_CALC2") {
  field(VAL, "OK")
  field(OUT, "$(device):STATUS_RS PP")
}


# As near as I can tell, this PV will always have the value "Ok"
# Processing this record, as caused by STATUS_RSCALC2,
# won't change this PV as OMSL is defaulting to supervisory.
# However, setting OMSL to closed_loop will just make it
# mirror STATUS_RS
# Should we junk this record?
record(stringout, "$(device):STATUS_RSOUT") {
  field(DESC, "Chan Status Update when OK")
  field(PINI, "YES")
  field(VAL, "Ok")
  field(DOL, "$(device):STATUS_RS")
}


# Process STATUS_RSOUT when raw status monitor sees an error
record(calcout, "$(device):STATUS_RSCALC2") {
  field(DOPT, "Use OCAL")
  field(OCAL, "A>=2?0:1")
  field(OOPT, "Transition To Non-zero")
  field(OUT, "$(device):STATUS_RSOUT.PROC")
  field(INPA, "$(device):STATUS_RSMON")
}

record(mbbi, "$(device):STATUS_RSMON") {
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db status($(channel),$(addr)) $(port) 0")
  field(DESC, "Raw Status Monitor")
  field(SCAN, "Event")
  field(EVNT, "$(fastEvt)")
  field(FLNK, "$(device):STATUS_RSCALC2")
  field(ZRST, "OK")
  field(ONST, "OK")
  field(TWST, "Below Range")
  field(THST, "Above Range")
  field(FRST, "At Atmosphere")
  field(FVST, "HV Off")
  field(SXST, "RP_OFF")
  field(SVST, "Wait")
  field(EIST, "LowEmis")
  field(NIST, "CNTRL_Off")
  field(TEST, "Protected State")
  field(ELST, "MISCONN")
  field(TVST, "Protected State")
  field(TTST, "NoGauge")
  field(FTST, "Not Connected")
  field(FFST, "Wrong Gauge")
# field(UNSV, "Bad Command")
  field(ZRSV, "NO_ALARM")
  field(ONSV, "NO_ALARM")
  field(TWSV, "NO_ALARM")
  field(THSV, "NO_ALARM")
  field(FRSV, "MINOR")
  field(FVSV, "MAJOR")
  field(SXSV, "MAJOR")
  field(SVSV, "MINOR")
  field(EISV, "MINOR")
  field(NISV, "MAJOR")
  field(TESV, "MAJOR")
  field(ELSV, "MAJOR")
  field(TVSV, "MINOR")
  field(TTSV, "MAJOR")
  field(FTSV, "MAJOR")
  field(FFSV, "MAJOR")
}

################################################################################
# PR Configuration Status
########################################

#
#  Query or set a gas type for PR/CP  
record(mbbi, "$(device):GASTYPE") {
  field(DESC, "Gas Type Config ACT")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getGT($(channel),$(addr)) $(port) 0")
  field(SCAN, "Event")
  field(EVNT, "$(slowEvt)")
  field(ZRST, "Nitrogen")
  field(ONST, "Argon")
  field(TWST, "Helium")
  field(PINI, "YES")
}

record(mbbo, "$(device):GASTYPEDES") {
  field(DESC, "Gas Type Config")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setGT($(channel),$(addr)) $(port) 0")
  field(ZRST, "Nitrogen")
  field(ONST, "Argon")
  field(TWST, "Helium")
  field(FLNK, "$(device):GASTYPE")
}


#Zero a PR/CP on channel n. Execute only when the pressure reading is less than 1X10-2 torr.
record(bo, "$(device):ZEROPR") {
  field(DESC, "Exec ZeroPR")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setVAC($(channel),$(addr)) $(port) 0")
  field(ZNAM, "ZeroPR")
  field(ONAM, "ZeroPR")
  field(ASG, "VACWRITE")
}


#  Query or set an autozero (CC or HC) control channel n for a PR/CP, or disable autozero (NA)  
record(mbbi, "$(device):AUTOZERO") {
  field(DESC, "AUTO Zero Cfg")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getAZ($(channel),$(addr)) $(port) 0")
  field(SCAN, "Event")
  field(EVNT, "$(slowEvt)")
  field(ZRST, "A1")
  field(ONST, "A2")
  field(TWST, "B1")
  field(THST, "B2")
  field(FRST, "C1")
  field(FVST, "C2")
  field(SXST, "Disabled")
  field(PINI, "YES")  
}

record(mbbo, "$(device):AUTOZERODES") {
  field(DESC, "AUTO Zero Cfg")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setAZ($(channel),$(addr)) $(port) 0")
  field(ZRST, "A1")
  field(ONST, "A2")
  field(TWST, "B1")
  field(THST, "B2")
  field(FRST, "C1")
  field(FVST, "C2")
  field(SXST, "Disabled")
  field(FLNK, "$(device):AUTOZERO")
}

# Send an atmospheric pressure to perform ATM calibration. The PR/CP must be at 
#    atmospheric pressure when running ATM calibration.
record(ai, "$(device):ATMCALIB") {
  field(DESC, "ATM Calib RBCK")
  field(SCAN, "Event")
  field(EVNT, "$(slowEvt)")
  field(DTYP, "stream")
  field(INP, "@mks937b.proto.db getATM($(channel),$(addr)) $(port) 0")
  field(EGU, "Torr")
  field(PREC, "2")
  field(HOPR, "1e+4")
  field(LOPR, "1e+2")
  field(FLNK, "$(device):HYSTSPRBCK_2")
  field(PINI, "YES")  
}

record(ao, "$(device):ATMCALIBDES") {
  field(DESC, "Setpt for ATM Calib")
  field(DTYP, "stream")
  field(OUT, "@mks937b.proto.db setATM($(channel),$(addr)) $(port) 0")
  field(EGU, "Torr")
  field(PREC, "2")
  field(HOPR, "1e+4")
  field(LOPR, "1e+2")
  field(DRVH, "1e+4")
  field(DRVL, "1e+2")
  field(DOL, "7.60e+2")
  field(ASG, "VACWRITE")
  field(FLNK, "$(device):ATMCALIB") 
}

