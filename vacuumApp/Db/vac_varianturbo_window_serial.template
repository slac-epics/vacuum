
#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBDEND


# Example substitutions file
#
#file vac_varianturbo_serial.template
#{
#   pattern {  device	   , port 	   , imax , vmax, smax , ihihi, ihi }
#	   {  VPTM:FEE1:221, VPC_FEE1_E201 ,  2.5 , 130 ,  56  , 0.5  , 0.3 } 
#	   {  VPTM:FEE1:231, VPC_FEE1_E202 , 10.0 , 100 ,  38  , 0.5  , 0.3 } 
#	   {  VPTM:FEE1:251, VPC_FEE1_E203 ,  5.0 , 130 ,  42  , 0.5  , 0.3 } 
#	   {  VPTM:FEE1:351, VPC_FEE1_E206 ,  5.0 , 130 ,  42  , 0.5  , 0.3 } 
#	   {  VPTM:FEE1:371, VPC_FEE1_E207 , 10.0 , 100 ,  38  , 0.5  , 0.3 } 
#	   {  VPTM:FEE1:381, VPC_FEE1_E208 ,  2.5 , 130 ,  56  , 0.5  , 0.3 } 
#}
####varian V81   imax=2.5,vmax=130,smax=80000
####varian v301  imax=2.5,vmax=130,smax=56000
####varian v701  imax=5  ,vmax=130,smax=42000
####varian v1001 imax=10 ,vmax=100,smax=38000
 


record(seq, "$(device):SCAN")
{
  field(DESC, "Master SCAN")
  field(SCAN, "5 second")
  field(SELM, "All")
  field(DLY1, "1.0")
  field(DOL1, "1")
  field(LNK1, "$(device):ERROR.PROC PP")
  field(DLY2, "4.0")
  field(DOL2, "1")
  field(LNK2, "$(device):FREQ.PROC PP")
  field(DLY3, "4.0")
  field(DOL3, "1")
  field(LNK3, "$(device):I.PROC PP")
  field(DLY4, "4.0")
  field(DOL4, "1")
  field(LNK4, "$(device):V.PROC PP")
  field(DLY5, "4.0")
  field(DOL5, "1")
  field(LNK5, "$(device):POWER.PROC PP")
  field(DLY6, "4.0")
  field(DOL6, "1")
  field(LNK6, "$(device):PUMP_TEMP.PROC PP")
  field(DLY7, "4.0")
  field(DOL7, "1")
  field(LNK7, "$(device):STATUS.PROC PP")
}

record(mbbi, "$(device):ERROR")
{
  field(DESC, "Error bit")
  field(DTYP, "stream")
  field(INP, "@varianturbo.proto.db getPumpError($(device)) $(port) 0 ")  
  field(ZRST, "No Connection")
  field(ONST, "Pump Overtemp")
  field(TWST, "Controller Overtemp")
  field(THST, "Power Failure")
  field(FRST, "Aux Failure")
  field(FVST, "Overvoltage")
  field(SXST, "Short Circuit")
  field(SVST, "High Load")
  field(ZRSV, "MAJOR")
  field(ONSV, "MAJOR")
  field(TWSV, "MAJOR")
  field(THSV, "MAJOR")
  field(FRSV, "MAJOR")
  field(FVSV, "MAJOR")
  field(SXSV, "MAJOR")
  field(SVSV, "MAJOR")
}

record(mbbi, "$(device):STATUS")
{
  field(DESC, "Pump Status")
  field(DTYP, "stream")
  field(INP, "@varianturbo.proto.db getPumpStatus($(device)) $(port) 0 ")  
  field(ZRST, "Stopped")
  field(ONST, "Interlock")
  field(TWST, "Starting")
  field(THST, "Auto-tuning")
  field(FRST, "Braking")
  field(FVST, "Normal")
  field(SXST, "Failure")
  field(ZRSV, "NO ALARM")
  field(ONSV, "MINOR")
  field(TWSV, "NO_ALARM")
  field(THSV, "MINOR")
  field(FRSV, "NO ALARM")
  field(FVSV, "NO ALARM")
  field(SXSV, "MAJOR")
}


#Note, this is the driving frequency, might not be the actual pump speed.
record(ai, "$(device):FREQ")
{
  field(DTYP, "stream")
  field(INP, "@varianturbo.proto.db getPumpFrequency($(device)) $(port) 0 ")  
  field(EGU, "Hz")
  field(ADEL, "1")
  field(MDEL, "0")
}

record(ai, "$(device):I")
{
  field(DTYP, "stream")
  field(INP, "@varianturbo.proto.db getPumpCurrent($(device)) $(port) 0 ") 
  field(EGU,  "A")
  field(PREC, "2")
  field(LINR, "SLOPE")
  field(ESLO, "0.001")
  field(EOFF, "0")
  field(HOPR, "$(imax)")
  field(LOPR, "0")
  field(ADEL, ".01")
  field(MDEL, ".01")
  field(HIHI, "$(ihihi)")
  field(HHSV, "MAJOR")
  field(HIGH, "$(ihi)")
  field(HSV, "MINOR")
}

record(ai, "$(device):V")
{
  field(DTYP, "stream")
  field(INP, "@varianturbo.proto.db getPumpVoltage($(device)) $(port) 0 ") 
  field(EGU,  "V")
  field(PREC, "1")
  field(HOPR, "$(vmax)")
  field(LOPR, "0")
  field(ADEL, ".1")
  field(MDEL, ".1")
}

#Note, power includes the duty cycle.
record(ai, "$(device):POWER")
{
  field(DTYP, "stream")
  field(INP, "@varianturbo.proto.db getPumpPower($(device)) $(port) 0 ") 
  field(EGU,  "W")
  field(PREC, "1")
  field(ADEL, "1")
  field(MDEL, "0.1")
}

record(ai, "$(device):PUMP_TEMP")
{
  field(DTYP, "stream")
  field(INP, "@varianturbo.proto.db getPumpTemp($(device)) $(port) 0 ") 
  field(PREC, "0")
  field(HOPR, "100")
  field(LOPR, "0")
  field(ADEL, "0")
  field(MDEL, "0")
  field(EGU, "C")
  field(HIHI, "55")
  field(HHSV, "MAJOR")
  field(HIGH, "50")
  field(HSV, "MINOR")
  field(LOLO, "-9999")
  field(LLSV, "INVALID")
}

