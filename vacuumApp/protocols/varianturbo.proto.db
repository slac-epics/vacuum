# Stream Device Protocol for the Varian Vxxx Turbomolecular Pumps

locktimeout = 5000;
outTerminator = CR;
inTerminator = "";
replytimeout = 3000;
readtimeout  = 200;
extrainput   = Ignore;

# See Page 79 of V81-AGctrl.pdf manual
# for controls, see page 72 for hardwired input control
# For rs-232 control see page 79 ASCII A, B, C,D, F.

# "A"=START 
# "B"=STOP 
# "C" = Low Speed ON 
# "D" = Low Speed OFF 
# "E" = Request for operational parameters 
# "F" = Pump times zeroing 
# "G" = Parameters reading 
# "H" = Parameters writing 
# "I"	= Request for operating status 
# "J" = Request for numerical reading 
# "K" = Request for counters reading.



# $1 = device

# Send an initial dummy command to clear out any garbage.
#@init{out " ";}

# Get Status
getStatus { out "I\xB7"; in "%01r%*1r";}

# Get Counters
getCounters { out "K\xB5"; in "%(\$1:CYCLETIME.VAL)#04r%(\$1:PUMPLIFE.VAL)#04r%(\$1:CYCLENUM.VAL)#02r%*1r";}

# Get Values
getValues { out "J\xB6"; in "%(\$1:I.A)01r%(\$1:V.A)01r%(\$1:RPM.VAL)01r%(\$1:TEMP.A)01r%*1r"; }

# Get Parameters
getParameters { out "G\xB9"; in "%(\$1:CYCLENUM2.VAL)#02r%(\$1:SPEEDTHR.VAL)#01r%(\$1:RUNUPTIME.VAL)#04r%(\$1:DEADTIME.VAL)01r%(\$1:SOFTSTART.VAL)01r%(\$1:WATER.VAL)01r%*1r";}

# Set START         
    # "A"=START 
setStart { out "A\xBF"; in ACK; }

# Set STOP         
    # "B"=STOP
setStop { out "B\xBE"; in ACK; }

# Set Low Speed On  "
    # C" = Low Speed ON
setLowSpeedOn { out "C\xBD"; in ACK; }

# Set low Speed Off 
    # "D" = Low Speed OFF
setLowSpeedOff { out "D\xBC"; in ACK; }

# Set Zero Pump Times   "F" = Pump times zeroing
setZeroPumpTimes { out "F\xBA";  in ACK; }

# Set Parameters
    # "E" = Request for operational parameters
    # Note: CYCLE Time, Life, Temp, I. V, Cycle #, R1, R2 are already avaibale in the above Freq is only one that is not. 


### Below Uses newer "Window" protocal Ver & is not available in "letter" ver
# Format <STX>+<ADDR>+<WIN>+<COM>+<DATA>+<ETX>+<CRC>
# Where
#    <ADDR> (Unit address) = 0x80 (for RS 232) 
#    <ADDR> (Unit address) = 0x80 + device number (0 to 31) (for RS 485) 
#    <WIN> (Window) = string of 3 numeric char indicating the window # ( Ô000Õ #to Ô999Õ)
#    <COM> (Command) = 0x30 to read the window, 0x31 to write into the window 
#    <DATA> = an alphanumeric ASCII string with the data to be written into the window. 
ADDR = 0x80;   
RCOM = 0x30;
WCOM = 0x31;

# Get Pressure reading (Format = X.X E XX) WIN=224
getPress { WIN = "224"; 
                    out STX,$ADDR,$WIN,$RCOM,ETX"%01<xor>";
                    in  STX,$ADDR,$WIN,"%E%*2r"," "ETX"%01<xor>";
                     }
#THIS Does Not Work                     
getPressEGU { WIN = "163"; 
                    #get EGU WIN=163
                    out STX,$ADDR,$WIN,$RCOM,ETX"%01<xor>";
                    in  STX,$ADDR,$WIN,"%(\$1:P.EGU){mBar=0|Pa=1|Torr=2}"ETX"%01<xor>"; 
                     }
                     
# Get Controller Heatsink Temperature (C) WIN=211
getCntrlHeatsinkTemp { WIN = "211"; 
                    out STX,$ADDR,$WIN,$RCOM,ETX"%01<xor>";
                    in  STX,$ADDR,$WIN,"%*5i%d"ETX"%01<xor>";
                     }

getCntrlAirTemp {  WIN = "216"; # WIN = "xD8"  \216;
                    out STX,$ADDR,$WIN,$RCOM,ETX"%01<xor>";
                    in  STX,$ADDR,$WIN,"%*5i%d"ETX"%01<xor>";
                   }
                   


# Reset Counter WIN = 302
setResetCounters {  WIN = "302";
                    CDATA= "1";
                    out STX,$ADDR,$WIN,$WCOM,$CDATA,ETX"%01<xor>";
                    in  STX,$ADDR,ACK,ETX"%01<xor>";

                 }

# Get Vent Valve
getVentValve {  WIN = "122"; #1=default=ON=CLOSE; 0=OPEN=OFF
                    out STX,$ADDR,$WIN,$RCOM,ETX"%01<xor>";
                    in  STX,$ADDR,$WIN,"%b"ETX"%01<xor>"; 
                 }
                 
# Set Vent Valve
setVentValveClose {  WIN = "122"; #1=default=ON=CLOSE; 0=OPEN=OFF
                     CDATA= "1";
                    out STX,$ADDR,$WIN,$WCOM,$CDATA,ETX"%01<xor>";
                    in  STX,$ADDR,ACK,ETX"%01<xor>";
                 }
setVentValveOpen {  WIN = "122"; #1=default=ON=CLOSE; 0=OPEN=OFF
                    CDATA= "0";
                    out STX,$ADDR,$WIN,$WCOM,$CDATA,ETX"%01<xor>";
                    in  STX,$ADDR,ACK,ETX"%01<xor>";
                 }

# Get/Set Vent Valve Mode
getVentValveMode {  WIN = "125"; #Automatic = 0
                    out STX,$ADDR,$WIN,$RCOM,ETX"%01<xor>";
                    in  STX,$ADDR,$WIN,"%b"ETX"%01<xor>"; 
                 }
                 
setVentValveModeAuto {  WIN = "125"; #Automatic = 0
                      CDATA= "0";
                      out STX,$ADDR,$WIN,$WCOM,$CDATA,ETX"%01<xor>";
                      in  STX,$ADDR,ACK,ETX"%01<xor>";
                      }        
setVentValveModeMan {  WIN = "125"; #Automatic = 0
                      CDATA= "1";
                      out STX,$ADDR,$WIN,$WCOM,$CDATA,ETX"%01<xor>";
                      in  STX,$ADDR,ACK,ETX"%01<xor>";
                      }                             

 
